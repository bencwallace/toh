/** Game runner class */
class Game {

	// number of disks
	field int n;

	constructor Game new(int num) {
		let n = num;

		return this;
	}

	// run a game
	method void run() {
		var Puzzle puzzle;
		var boolean selected, quit;
		var char key;
		var int from, to;
		var Stack fromPeg, toPeg;
		var String s;

		let puzzle = Puzzle.new(n);
		do puzzle.drawDisks();

		let key = 0;
		let selected = false;
		let quit = false;

		while (~quit) {
			while (key = 0) {
				let key = Keyboard.keyPressed();
			}

			// left/down/right arrows
			if ((key = 49) | (key = 50) | (key = 51)) {
				// convert key to integer via String methods
				let s = String.new(1);
				let s = s.appendChar(key);

				if (~selected) {
					let from = s.intValue() - 1;
					let fromPeg = puzzle.getPeg(from);
					let selected = true;
				} else {
					let to = s.intValue() - 1;
					let toPeg = puzzle.getPeg(to);

					do puzzle.move(from, to);
					do puzzle.drawDisks();
					let selected = false;

					if (puzzle.isSolved()) {
						do Output.printString("Congratulations!");
						let quit = true;
					}
				}
			}
			// enter key
			if (key = 128) {
				do Output.printString("solver: not implemented");
			}
			// escape key
			if (key = 140) {
				let quit = true;
			}

			while (~(key = 0)) {
				let key = Keyboard.keyPressed();
			}
		}

		return;
	}

	method void dispose() {
		do puzzle.dispose();
		do fromPeg.dispose();
		do toPeg.dispose();
		do s.dispose();
		do Memory.deAlloc(this);
		return;
	}

}
